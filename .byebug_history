continue
exit
self.user
bartender
user
exit
ENV['TWILIO_ACCOUNT_SID']
exit
r.bartender.reviews.all.map(&:rating)
r.bartender.reviews.all.map(&:id)
r.bartender.reviews.all.count
r.bartender.reviews.all
r.bartender.reviews.map(&:id)
r.bartender.reviews.count
r.bartender.reviews.map(&:rating)
r.bartender.reviews
r.bartender.reviews.map.(&:rating)
r.bartender.reviews.all.map.(&:rating)
r.bartender.reviews.all[1]
r.bartender.reviews.all[0]
r.bartender.reviews
r.bartender.reviews.map(&:rating)
r.bartender.id
r.bartender.reviews.count
continue
r.bartender.reviews.count
r.bartender.reviews
r
exit
continue
r.bartender.reviews.count
continue
r.bartender.reviews.count
r.bartender.reviews
r.bartender
r
exit
Bartender.first.reviews
self.bartender.reviews.map(&:rating)
self.bartender.id
continue
self.bartender.id
self.bartender.reviews.map(&:rating)
continue
self.bartender.reviews.map(&:rating)
continue
self.bartender.rating = review_ratings.reduce{ |sum, review_rating| sum + review_rating }.to_f / review_ratings.size
review_ratings = self.bartender.reviews.map(&:rating)
self.bartender.reviews.map(&:rating)
self.bartender.reviews
self.bartender
self
exit
self.bartender.reviews.map(&:rating)
continue
self.bartender.reviews.map(&:rating)
continue
Review.first.bartender.reviews.first
Review.first.bartender.reviews
Review.first.bartender
Review.first
self.bartender.reviews.first
self.bartender.reviews
self.bartender
self
continue
self.bartender.reviews.first
self.bartender.reviews
self.bartender
review_ratings = self.bartender.reviews.map(&:rating)
self
continue
Party.find(params[:id])
params
continue
conitnue
party.date.to_s(:short)
party.date.to_s.to_formatted_s(:short)
party.date.to_s
party.date
continue
party.date
party
continue
pretty_date(party.date)
continue
party.date.to_date.to_formatted_s(:short)
party.date.to_formatted_s(:short)
party.date.to_date
pretty_date(party.date)
pretty_date(party.date.to_s)
pretty_date(party.date)
party.date
exit
continue
params
continue
@party
continue
@party
